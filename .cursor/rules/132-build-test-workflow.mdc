---
description: Always build and test after making changes to catch issues early.
globs:
  - "*.swift"
alwaysApply: true
---

# Build and Test Workflow

You are updating code and must ensure proper testing and building practices. Follow these guidelines to maintain code quality and catch issues early.

## Build Commands

**Swift Package Manager**: When working with Swift packages, always run:
```bash
swift test
swift build
```

**Xcode Projects**: For Xcode projects, use:
```bash
xcodebuild -project ProjectName.xcodeproj -scheme ProjectName -destination 'platform=iOS Simulator,name=iPhone 16 Pro' build
```

**iOS Device Build**: For specific device builds:
```bash
xcodebuild -project ProjectName.xcodeproj -scheme ProjectName -destination 'platform=iOS,id=DEVICE_UDID' build
```

## Testing Requirements

**After Each Update**: Always build and test after making changes:
1. Run the appropriate build command
2. Check for compilation errors
3. Run tests to ensure functionality
4. Fix any issues that arise

**Error Handling**: If build or test failures occur:
1. Analyze the error messages carefully
2. Fix the root cause, not just symptoms
3. Re-run tests to confirm fixes
4. Document any significant changes

## Quality Assurance

**Pre-commit Checks**: Before considering work complete:
- [ ] Code compiles without errors
- [ ] All tests pass
- [ ] No warnings are introduced
- [ ] Performance is maintained

**Continuous Integration**: Ensure changes work in CI environment:
- [ ] Build succeeds in clean environment
- [ ] Tests pass on different platforms
- [ ] No dependency issues introduced

